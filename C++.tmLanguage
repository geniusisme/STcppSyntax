<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>cpp</string>
		<string>cc</string>
		<string>cp</string>
		<string>cxx</string>
		<string>c++</string>
		<string>C</string>
		<string>h</string>
		<string>hh</string>
		<string>hpp</string>
		<string>hxx</string>
		<string>h++</string>
		<string>inl</string>
		<string>ipp</string>
	</array>
	<key>firstLineMatch</key>
	<string>-\*- C\+\+ -\*-</string>
	<key>foldingStartMarker</key>
	<string>(?x)
		 /\*\*(?!\*)
		|^(?![^{]*?//|[^{]*?/\*(?!.*?\*/.*?\{)).*?\{\s*($|//|/\*(?!.*?\*/.*\S))
	</string>
	<key>foldingStopMarker</key>
	<string>(?&lt;!\*)\*\*/|^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~C</string>
	<key>name</key>
	<string>C++</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#everything</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>everything</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#single_line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#multi_line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#template</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#define</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#type_definition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#typedef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#function_definition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#template_definition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#class_definition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#preprocessor_definition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable_definition</string>
				</dict>
			</array>
		</dict>

		<key>typedef</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.c++</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.c++</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>\b(typedef)\b</string>
			<key>end</key>
			<string>\b(\w+)\s*;</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#template_instantiation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#define</string>
				</dict>
			</array>
		</dict>

		<key>type_declaration</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.c++</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type-of.c++</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>(class|struct|enum)(?=\s+\w+.*;$)</string>
			<key>end</key>
			<string>(\w+::)*(\w+)</string>
		</dict>

		<key>type_definition</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.c++</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.type.c++</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>(class|struct|enum)(?=\s+\w+[^;]*$)</string>
			<key>end</key>
			<string>(\w+::)*(\w+)</string>
		</dict>

		<key>punctuation</key>
		<dict>
			<key>match</key>
			<string>[\+\*\-^&amp;;:/!=&gt;&lt;?\(\)%\.,\[\]\{\}]</string>
			<key>name</key>
			<string>punctuation.definition.c++</string>
		</dict>

		<key>single_line_comment</key>
		<dict>
			<key>match</key>
			<string>//.*$</string>
			<key>name</key>
			<string>comment.line.double-slash.c++</string>
		</dict>

		<key>multi_line_comment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.c++</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.c++</string>
		</dict>

		<key>keywords</key>
		<dict>
			<key>match</key>
			<string>\b(sizeof|nothrow|const_cast|static_cast|dynamic_cast|reinterpret_cast|throw|inline|continue|operator|override|this|typedef|extern|static|delete|new|export|break|auto|return|public|protected|private|const|using|mutable|constexpr|if|while|for|case|switch|catch|try|decltype|do|else|virtual|noexcept|default|class|struct|enum|union|template|typename|namespace|explicit|friend|nullptr)\b</string>
			<key>name</key>
			<string>keyword.other.c++</string>
		</dict>

		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>R?"(\w*\()?.*?(\)\w*)?"</string>
					<key>name</key>
					<string>string.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>'.'</string>
					<key>name</key>
					<string>string.c++</string>
				</dict>
			</array>
		</dict>

		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b0x[0123456789abcdeABCDE]+</string>
					<key>name</key>
					<string>constant.numeric.hex.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b0[01234567]+</string>
					<key>name</key>
					<string>constant.numeric.octal.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bbx[01]+</string>
					<key>name</key>
					<string>constant.numeric.binary.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d+(\.\d*)?(\w+)?(-\d+)?</string>
					<key>name</key>
					<string>constant.numeric.decimal.c++</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(true|false)\b</string>
					<key>name</key>
					<string>constant.numeric.bool.c++</string>
				</dict>
			</array>
		</dict>

		<key>template</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.c++</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.c++</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>\b(template)\b</string>
			<key>end</key>
			<string>^</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#template_instantiation</string>
				</dict>
			</array>
		</dict>

		<key>template_instantiation</key>
		<dict>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.c++</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.c++</string>
				</dict>
			</dict>
			<key>begin</key>
			<string>(&lt;)</string>
			<key>end</key>
			<string>(&gt;)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#template_instantiation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#define</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(class|typename)\b</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\w+)</string>
				</dict>
			</array>
		</dict>

		<key>function_definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.c++</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(\b\w+)(?=[&amp;\*][\s&amp;\*]+(\w+::)*\w+\s*\()</string>
					<key>end</key>
					<string>(\w+)\s*(?=\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.c++</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(\b\w+)(?=&lt;[^&gt;&lt;]*(&lt;[^&gt;&lt;]*(&lt;[^&gt;&lt;]*&gt;[^&gt;&lt;]*)*&gt;[^&gt;&lt;]*)*&gt;[\s&amp;\*]+(\w+::)*\w+\s*\()</string>
					<key>end</key>
					<string>(\w+)\s*(?=\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#template_instantiation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.c++</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(\b\w+)\s+(?=(\w+::)*\w+\s*\()</string>
					<key>end</key>
					<string>(\w+)\s*(?=\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!--
			we  use assumption that user places * and & right after the type, so we will be able to distinguish them from operators
		-->
		<key>variable_definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.variable.c++</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(\b\w+)(?=[&amp;\*][\s&amp;\*]+\w+)</string>
					<key>end</key>
					<string>(\w+)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
					</dict>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.variable.c++</string>
						</dict>
					</dict>
					<key>begin</key>
					<string>(\b\w+)(?=&lt;[^&gt;&lt;]*(&lt;[^&gt;&lt;]*(&lt;[^&gt;&lt;]*&gt;[^&gt;&lt;]*)*&gt;[^&gt;&lt;]*)*&gt;[\s&amp;\*]+\w+)</string>
					<key>end</key>
					<string>(\w+)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#template_instantiation</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#punctuation</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.type-of.c++</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.variable.c++</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\b\w+)\s+(\w+)</string>
				</dict>
			</array>
		</dict>

		<key>define</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>definition.preprocessor.c++</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b([_A-Z][_A-Z0-9]+)\b</string>
		</dict>

		<key>preprocessor_definition</key>
		<dict>
			<key>begin</key>
			<string>^\s*(#)(include|pragma|ifdef|ifndef|endif|else|if|define)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.preprocessor.c++</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.c++</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\n$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#define</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#single_line_comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#punctuation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operators</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.c++</string>
	<key>uuid</key>
	<string>26251B18-6B1D-11D9-AFDB-000D93589AF7</string>
</dict>
</plist>

